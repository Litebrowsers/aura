name: Build and Release Aura

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build aura.min.js
        run: npm run build

      - name: Verify build output
        run: |
          ls -la dist/apps/aura/
          if [ ! -f "dist/apps/aura/aura.min.js" ]; then
            echo "Error: aura.min.js not found!"
            exit 1
          fi
          if [ ! -f "dist/apps/aura/aura.js" ]; then
            echo "Error: aura.js not found!"
            exit 1
          fi
          echo "Build successful - both aura.js and aura.min.js created"

      - name: Bump version and create tag
        id: bump_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $VERSION"
          
          # Увеличиваем patch версию (например v1.2.3 -> v1.2.4)
          NEW_VERSION=$(npm version patch --no-git-tag-version)
          TAG_NAME="v$NEW_VERSION"
          
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          
          git commit -am "chore: bump version to $NEW_VERSION" || echo "No changes to commit"
          git tag $TAG_NAME
          git push origin HEAD:main --tags

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.TAG_NAME }}
          name: Aura ${{ steps.bump_version.outputs.NEW_VERSION }}
          body: |
            ## Aura Library Release ${{ steps.bump_version.outputs.NEW_VERSION }}
            
            ### What's included:
            - `aura.min.js` - Minified and obfuscated production build
            - Complete browser fingerprinting functionality
            - Data attribute configuration support
            - Auto-fetch capabilities
            
            ### Usage:
            ```html
            <script 
              src="aura.min.js"
              data-api-endpoint="https://your-domain.com/api/metrics"
              data-token="your-api-token"
              buttons-events="false">
            </script>
            ```
            
            ### Manual Integration:
            ```javascript
            const aura = new Aura({ timeout: 3000 });
            aura.collect().then((result) => {
              console.log('Fingerprint collected:', result.fingerprint);
            });
            ```
            
            For more information, see the [README](https://github.com/${{ github.repository }}/blob/main/README.md).
          draft: false
          prerelease: false
          files: |
            ./dist/apps/aura/aura.min.js
            ./dist/apps/aura/aura.js
